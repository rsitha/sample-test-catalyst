/**
 * Main entrypoint.
 */
export declare function main(): Promise<void>;
/**
 * Returns a set of the root package.json files direct dependencies
 */
export declare function getDirectDependencySet(pkgJsonPath: string): Promise<Set<string>>;
/**
 * Given the name of a top-level folder in node_modules, parse the
 * package json and return it as an object along with
 * some additional internal attributes prefixed with '_'.
 */
export declare function parsePackage(p: string, dependencies?: Set<string>): Promise<Dep>;
/**
 * Given a pkg, return the skylark nodejs_binary targets for the package.
 */
export declare function printPackageBin(pkg: Dep): string;
export declare function printIndexBzl(pkg: Dep): string;
declare type Dep = {
    _dir: string;
    _isNested: boolean;
    _dependencies: Dep[];
    _files: string[];
    _runfiles: string[];
    _directDependency: boolean;
    [k: string]: any;
};
export {};
//# sourceMappingURL=generate_build_file.d.ts.map