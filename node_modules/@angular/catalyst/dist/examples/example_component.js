import { Component, EventEmitter, Inject, InjectionToken, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "rxjs";
export const INJECTED_MESSAGE = new InjectionToken('INJECTED_MESSAGE');
export const AN_OBSERVABLE = new InjectionToken('AN_OBSERVABLE');
/** Example Component */
export class ExampleComponent {
    constructor(injectedMessage, anObservable) {
        this.injectedMessage = injectedMessage;
        this.anObservable = anObservable;
        this.anInput = 'Hello world!';
        this.anOutput = new EventEmitter();
    }
    ngOnChanges() {
        this.computedValue = `::${this.anInput}::`;
    }
}
ExampleComponent.ɵfac = function ExampleComponent_Factory(t) { return new (t || ExampleComponent)(i0.ɵɵdirectiveInject(INJECTED_MESSAGE), i0.ɵɵdirectiveInject(AN_OBSERVABLE)); };
ExampleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExampleComponent, selectors: [["example-component"]], inputs: { anInput: "anInput" }, outputs: { anOutput: "anOutput" }, features: [i0.ɵɵNgOnChangesFeature], decls: 9, vars: 6, consts: [[1, "from-an-input"], [1, "from-computed-value"], [1, "from-async"], [1, "from-injection"]], template: function ExampleComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "div", 1);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "div", 2);
        i0.ɵɵtext(5);
        i0.ɵɵpipe(6, "async");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(7, "div", 3);
        i0.ɵɵtext(8);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx.anInput, "\n");
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", ctx.computedValue, "\n");
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind1(6, 4, ctx.anObservable), "\n");
        i0.ɵɵadvance(3);
        i0.ɵɵtextInterpolate1(" ", ctx.injectedMessage, "\n");
    } }, pipes: [i1.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ExampleComponent, [{
        type: Component,
        args: [{ selector: 'example-component', template: "<div class=\"from-an-input\">\n  {{ anInput }}\n</div>\n<div class=\"from-computed-value\">\n  {{ computedValue }}\n</div>\n<div class=\"from-async\">\n  {{ anObservable | async }}\n</div>\n<div class=\"from-injection\">\n  {{ injectedMessage }}\n</div>\n" }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [INJECTED_MESSAGE]
            }] }, { type: i2.Observable, decorators: [{
                type: Inject,
                args: [AN_OBSERVABLE]
            }] }]; }, { anInput: [{
            type: Input
        }], anOutput: [{
            type: Output
        }] }); })();
