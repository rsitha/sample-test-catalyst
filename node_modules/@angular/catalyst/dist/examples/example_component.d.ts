import { EventEmitter, InjectionToken, OnChanges } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare const INJECTED_MESSAGE: InjectionToken<string>;
export declare const AN_OBSERVABLE: InjectionToken<Observable<string>>;
/** Example Component */
export declare class ExampleComponent implements OnChanges {
    readonly injectedMessage: string;
    readonly anObservable: Observable<string>;
    anInput: string;
    anOutput: EventEmitter<boolean>;
    computedValue: string;
    constructor(injectedMessage: string, anObservable: Observable<string>);
    ngOnChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ExampleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ExampleComponent, "example-component", never, { "anInput": "anInput"; }, { "anOutput": "anOutput"; }, never, never>;
}
//# sourceMappingURL=example_component.d.ts.map